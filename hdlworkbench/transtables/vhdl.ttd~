// place holder list: *0 special, *1 - *4 normal,
// *5 place token into linex1, *6 comma, *7 line token
// *8 space, *9 module name, *a getPHPType, *b current scope
// flag holder list: x don't care, r repeat, y finish processing, z optional token
integer,integer
string,string
condition,condition
comma,comma
port,port
character,character
timeunit,timeunit
attrib,attrib
airtheng,airtheng
justfunctions,justfunctions
dontcare,dontcare
filename,filename
paramname,paramname
paramtype,paramtype
paramrettype,paramrettype
parammode,parammode
paramdefault,paramdefault
parammodifier,parammodifier
constname,constname
newconstname,newconstname
varname,varname
vartype,vartype
newvarname,newvarname
newintvarname,newintvarname
intvarname,intvarname
newstringvarname,stringnewvarname
stringvarname,stringvarname
newsignalname,newsignalname
signalname,signalname
newentityid,newentityid
entityid,entityid
newpackageid,newpackageid
packageid,packageid
newarchname,newarchname
archname,archname
for,for@@for(,{newintvarname}@@$*1=,in,{span}@@*2;$*1 <##>##<=##>= *3;$*1*0,loop@@){
span,{intexpression},to##downto##<=##>=,{intexpression}
intexpression,{integer}##{intvarname}
stringexpression,{string}##{stringvarname}
endloop,endloop@@},;
endprocess,endprocess@@},{processname},;
endfunction,endfunction@@},{functionname},;
endprocedure,endprocedure@@},{procedurename},;
entity,entity,{newentityid},is
package,package,{newpackageid},is
package,package,body,{packageid},is
end,end,{archname},;@@}
end,end,{entityid},;
end,end,{packageid},;
processname,processname
functionname,functionname
procedurename,procedurename
newprocessname,newprocessname
newfunctionname,newfunctionname
newprocedurename,newprocedurename
architecture,architecture@@function*8,{newarchname}@@*9,of@@(),{entityid},is@@*8{
process,{newprocessname}@@function*8*1,:,process,(@@(,{signalname}##{comma}##)@@$*5##*6##)*8{@@r+0##r+0##x
begin,begin
force,force@@createForce(,(,{entityid}@@"*7"*6,*6,{signalname}@@"*7"*6,*6,{timeunit}@@*7*6,*6,{integer}@@*7,)@@),;@@;
componentname,componentname
newcomponentname,newcomponentname
componentid,componentid
newcomponentid,newcomponentid
useentity,for,{newcomponentid},:,{componentname},useentity
portmap,{componentid},:,{componentname},portmap
component,component,{newcomponentname}
endcomponent,endcomponent,;
signal,signal,{newsignalname}@@createSignal("*9"*6"*b"*6"*7"*6"in"*6,:,{string}@@"*7"*60,;##:=@@*6"");##*6@@y##x,{string}@@*7),;@@;
variable,variable,{newvarname}@@createVariable("*9"*6"*b"*6"*7"*6"in"*6,:,{vartype}@@"*7"*60,;##:=@@*6"");##*6@@y##x,{string}@@*7),;@@;
constant,constant,{newconstantname}@@createConstant("*9"*6"*b"*6"*7"*6,:,{vartype}@@"*7"*60,;##:=@@*6"");##*6@@y##x,{string}@@*7),;@@;
function,function,{newfunctionname}@@function*8*7(,(,{paramdefault}##{paramname}##)@@*7##$*7##)@@r+0##x##r+4,:,{parammode},{paramtype},;##:=##)@@*6##=##)@@r-4##r-4##x,return,[paramrettype},is@*8{
procedure,procedure,{newprocedurename}@@function*8*7(,(,{paramdefault}##{paramname}##)@@*7##$*7##)@@r+0##x##r+4,:,{parammode},{paramtype},;##:=##)@@*6##=##)@@r-4##r-4##x,is@@*8{
assert,assert@@if(,{condition},{string}@@)*8{echo("*7");,severity,Note##Warning##Error##Failure,;@@exit();}
endif,endif@@},;
else,else@@}*8else*8{
if,if@@if*8(,{attrib}##{intvarname}##{stringvarname}##{signalname}@@x##getVariable("*9"*6"*7")##getVariable("*9"*6"*7")##getSignal("*9"*6"*7"),+##-##\##*##=##!=##<##>##<=##>=@@*7##*7##*7##*7##*7=##*7##*7##*7##*7##*7,{string}@@*7,and##or##then@@*8&&*8##*8||*8##)*8{@@r-3##r-3##x
elsif,elsif@@else*8if*8(,{attrib}##{intvarname}##{stringvarname}##{signalname}@@x##getVariable("*9"*6"*7")##getVariable("*9"*6"*7")##getSignal("*9"*6"*7"),+##-##\##*##=##!=##<##>##<=##>=@@*7##*7##*7##*7##*7=##*7##*7##*7##*7##*7,{string}@@*7,and##or##then@@*8&&*8##*8||*8##)*8{@@r-3##r-3##x

