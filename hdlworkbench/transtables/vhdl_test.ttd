
integer,*,*,integer
string,*,*,string
condition,*,*,condition
comma,*,*,comma
port,*,*,port
character,*,*,character
timeunit,*,*,timeunit
airtheng,*,*,airtheng
typedef,*,*,typedef
vartype,*,*,vartype
constval,*,*,constval
funcdef,*,*,funcdef
justfunctions,*,*,justfunctions
dontcare,*,*,dontcare
paramname,*,*,paramname
paramtype,*,*,paramtype
paramrettype,*,*,paramrettype
parammode,*,*,parammode
paramdefault,*,*,paramdefault
parammodifier,*,*,parammodifier
constname,*,*,constname
newconstname,*,*,newconstname
varname,*,*,varname
filename,*,*,filename
typename,*,*,typename
newtypename,*,*,newtypename
filetype,*,*,filetype
newfiletype,*,*,newfiletype
statments,*,*,statments
newvarname,*,*,newvarname
newintvarname,*,*,newintvarname
intvarname,*,*,intvarname
newstringvarname,*,*,stringnewvarname
stringvarname,*,*,stringvarname
newsignalname,*,*,newsignalname
signalname,*,*,signalname
gsignalname,*,*,gsignalname
signamenocheck,*,*,signamenocheck
signamenocheck1,*,*,signamenocheck1
newentityid,*,*,newentityid
entityid,*,*,entityid
newpackageid,*,*,newpackageid
packageid,*,*,packageid
newarchname,*,*,newarchname
archname,*,*,archname
for,*,*,for@@for(,{newintvarname}@@$*1=,in,{span}@@*2;$*1 <##>##<=##>= *3;$*1*0,loop@@){
span,*,*,{intexpression},to##downto##<=##>=,{intexpression}
intexpression,*,*,{integer}##{intvarname}
stringexpression,*,*,{string}##{stringvarname}
entity,*,*,entity,{newentityid},is
package,*,*,package,{newpackageid},is,package,body,{packageid},is
end,*,*,end,{archname},;,end,{entityid},;,end,{packageid},;
processname,*,*,processname
functionname,*,*,functionname
procedurename,*,*,procedurename
newprocessname,*,*,newprocessname
newfunctionname,*,*,newfunctionname
newprocedurename,*,*,newprocedurename
architecture,*,*,architecture,{newarchname},of,{entityid},is
process,*,*,{newprocessname}@@function*8*1,:,process,(@@(,{signamenocheck1}##{comma}##)@@*5##*c##)*8{@@r+0##r+0##x
begin,*,*,begin
force,*,*,force@@createForce(,(,{entityid}@@"*7"*6,*6,{signalname}@@"*7"*6,*6,{timeunit}@@*7*6,*6,{integer}@@*7,)@@),;@@;
componentname,*,*,componentname
newcomponentname,*,*,newcomponentname
componentid,*,*,componentid
newcomponentid,*,*,newcomponentid
useentity,*,*,for,{newcomponentid},:,{componentname},useentity
portmap,*,*,{componentid},:,{componentname},portmap
component,*,*,component,{newcomponentname}
endcomponent,*,*,endcomponent,;
signal,*,*,signal,{newsignalname}@@createSignal("*9"*6"*b"*6"*7"*6"in"*6,:,{vartype}@@"*7"*60,;##:=@@*6"");##*6@@y##x,{string}@@*7),;@@;
variable,*,*,variable,{newvarname}@@createVariable("*9"*6"*b"*6"*7"*6"in"*6,:,{vartype}@@"*7"*60,;##:=@@*6"");##*6@@y##x,{string}@@*7),;@@;
constant,*,*,constant,{newconstname}@@createConstant("*9"*6"*b"*6"*7"*6,:,{vartype}@@"*7"*60,;##:=@@*6"");##*6@@y##x,{constval}@@*7),;@@;
function,*,*,function,{newfunctionname}@@function*8*7(,(,{paramdefault}##{paramname}##)@@*7##$*7##)@@r+0##x##r+4,:,{parammode},{paramtype},;##:=##)@@*6##=##)@@r-4##r-4##x,return,[paramrettype},is@*8{
procedure,*,*,procedure,{newprocedurename}@@function*8*7(,(,{paramdefault}##{paramname}##)@@*7##$*7##)@@r+0##x##r+4,:,{parammode},{paramtype},;##:=##)@@*6##=##)@@r-4##r-4##x,is@@*8{
assert,*,*,assert@@if(,{condition},{string}@@)*8{echo("*7");,severity,Note##Warning##Error##Failure,;@@exit();}
endif,*,*,endif@@},;
else,*,*,else@@}*8else*8{
if,*,*,if@@if*8(,{intvarname}##{stringvarname}##{gsignalname}##{funcdef}@@getVariable("*9"*6"*7")##getVariable("*9"*6"*7")##getSignal("*9"*6"*7")##*7,+##-##\##*##=##!=##<##>##<=##>=@@*7##*7##*7##*7##*7=##*7##*7##*7##*7##*7,{string}##{character}@@*7##*7,and##or##then@@*8&&*8##*8||*8##)*8{@@r-3##r-3##x
elsif,*,*,elsif@@else*8if*8(,{intvarname}##{stringvarname}##{gsignalname}##{funcdef}@@getVariable("*9"*6"*7")##getVariable("*9"*6"*7")##getSignal("*9"*6"*7")##*7,+##-##\##*##=##!=##<##>##<=##>=@@*7##*7##*7##*7##*7=##*7##*7##*7##*7##*7,{string}##{character}@@*7##*7,and##or##then@@*8&&*8##*8||*8##)*8{@@r-3##r-3##x
file,*,*,file,{newfiletype}@@$*7=fopen(,:,text,is,{filename}@@*7*6,in##out@@"r"##"w",;@);
type,*,*,type,{newtypename},is,{typedef},;
subtype,*,*,subtype,{newtypename},is,{typedef},;
endcase,*,*,endcase@@},;
when,*,*,when@@case,{string}##{integer}@@*7##*7,=>,{statments}
case,*,*,case@@switch,{varname}@@getVariable("*9"*6"*7"),is@@{
endloop,*,*,endloop@@},;
endprocess,*,*,endprocess@@},{processname},;
endfunction,*,*,endfunction@@},{functionname},;
endprocedure,*,*,endprocedure@@},{procedurename},;

