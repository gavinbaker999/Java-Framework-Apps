<html>
<head>
<script src="../../../website/scripts/common.js" type="text/javascript"></script>
<script src="../../../website/scripts/jquery-1.9.0.js" type="text/javascript"></script>
<link rel="stylesheet" href="../../../website/css/ehs_default.css" type="text/css" media="screen">
</head>
<body>
<?

// Generated by: HDL Work Bench 01.40.1494.00 (01/10/15) (c) End House Software 2007-2016 Unregistered Version Build Date: 21-June-2016 10:46 PM Build Number: 1494 Framework: Alpha 1.03 27/03/08
// Generation date: 20/07/16 19:01

include("../../../website/scripts/common.php");
$langkeywords = "force,end block,endblock,end record,endrecord,end case,endcase,end fuction,endfunction,end procedure,endprocedure,end loop,endloop,end process,endprocess,end component,endcomponent,port map,portmap,use entity,useentity,end if,endif,abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,bofy,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,entity,exit,file,for,function,generate,generic,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,literal,loop,map,mod,nand,new,next,nor,not,null,of,on,open,or,others,out,package,port,postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,shared,sia,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,util,use,variable,wait,when,while,with,xnor,xor";

include("../support/simlib.php");
include("../support/vhdlstandardfuncs.php");
include("../support/textio.php");
include("../support/std_logic_1164.php");
include("../support/numeric_std.php");
include("../support/standard.php");
$link = mysqlConnect();
clearDatabase($_GET["entity"]);










createSignal("testnand","testnand","ck","in","bit,0,0,0,0,testnand,,,0,0,0",0,"");
function clockpluse() {
	
	if (getSignal("testnand","ck")==1 &&    last_value('ck')==0) {
		processSignal("testnand","ck","'0' ;","delaysignal:20:ms");

		} else {
		processSignal("testnand","ck","'1' ;","delaysignal:20:ms");

		}
	}
function process1() {
	
createSPMap('testnand','process2','ck');
	}
function process2() {
	
deleteSPMap('testnand','process2','ck');
rerunwaitchain('process1');
	}
function testnand_testproc($clock) {
	
	createVariable("testnand","testnand_testproc","gavin","in","qsim_state_vector,0,0,0,0,testnand_testproc,,,0,0,0",0,"");
	createSignal("testnand","testnand_testproc","pc","in","qsim_state_vector,0,0,0,0,testnand_testproc,,,0,0,0",0,"");
	$infile=fopen("infile","r");
	if (   last_value('clock')==1) {
		processSignal("testnand","pc","3 ;","delaysignal:10:ms");

		}
	fclose($infile);
}











function nandgate_two() {
	
	if (getSignal("nandgate","in1")==1 && getSignal("nandgate","in2")==1) {
		processSignal("nandgate","out1","'0' ;","");

		} else {
		processSignal("nandgate","out1","'1' ;","");

		}
	}

function getEntities() {
	return "testnand,nandgate";
}

function getTypes() {
	return "bit,std_logic,int,string,qsim_state_vector,std_logic_vector";
}

function getNoNameProcesses() {
	return "";
}

function getArrayNames() {
	return "";
}

function initSignals() {
	createSignal("nandgate","nandgate","out1","out","bit,0,0,0,0,nandgate,,,0,0,0",1,"0");
	createSignal("nandgate","nandgate","in2","in","bit,0,0,0,0,nandgate,,,0,0,0",1,"0");
	createSignal("nandgate","nandgate","in1","in","bit,0,0,0,0,nandgate,,,0,0,0",1,"0");
	createForce("testnand","in2",50,0);
	createForce("testnand","in1",50,0);
	createForce("testnand","ck",0,1);
	createForce("testnand","in2",0,1);
	createForce("testnand","in1",0,1);
	createParameter('testnand','testnand_testproc','clock','std_logic,0,0,0,0,testnand_testproc,,,0,0,0',1,'in',0,0,0,'');
	createSSMap("nandgate"," in1 : in bit ; in2 : in bit ; out1 : out bit ","testnand"," in1 , in2 , out1 ");
	createSignal("testnand","testnand","out1","out","bit,0,0,0,0,testnand,,,0,0,0",1,"0");
	createSignal("testnand","testnand","in2","in","bit,0,0,0,0,testnand,,,0,0,0",1,"0");
	createSignal("testnand","testnand","in1","in","bit,0,0,0,0,testnand,,,0,0,0",1,"0");
}
function storeProcessNames() {
	createSPMap("nandgate","nandgate_two","in2");
	createSPMap("nandgate","nandgate_two","in1");
	addProcessName("nandgate","nandgate_two","in1,in2");
	createSPMap("testnand","process2","ck");
	addProcessName("testnand","process2","ck");
	addProcessName("testnand","process1","");
	createSPMap("testnand","clockpluse","ck");
	addProcessName("testnand","clockpluse","ck");
}
simulate($_GET["entity"]);
mysql_close($link);
?>
</body>
</html>
